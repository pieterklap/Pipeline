##Start## "PeptideProphet"

# sets the location of peptideprophet into variable VALprog
VALprog=$(grep "PeptideProphet " "$LOC"install_locations | awk '{print $2}')

if [[ $VALprog == "" ]] || [ ! -f $VALprog ]; then
    echo -e "\e[93mWARNING:\e[0m The location of PeptideProphet is not given or does not exist"
    VALprog=$(command -v PeptideProphetParser)
    if [[ $VALprog == "" ]]; then
        echo -e "\e[91ERROR:\e[0m PeptideProphet was not found. \nexiting"
        exit
    else
        echo -e "\e[92mRunning:\e[0m $VALprog"
    fi
fi


EXTENTION=$(echo $PIDoutput | awk -F. '{print $(NF-1)"."$NF}')
#   Makes a copy of the pep.xml file before peptideprophet overwrites it
if [[ $EXTENTION == "pep.xml" ]]; then
    copy_PIDoutput=$(echo $PIDoutput | sed "s/\.$EXTENTION/_database_search\.$EXTENTION/")
    cp $PIDoutput $copy_PIDoutput
fi
#   if no parameter file was given do not check the non existing file
if [[ $VALparam != "" ]]; then
    VALparam=$(grep -v "^#" $VALparam | awk '{print $1}' | tr "\n" " ")
fi
# runs peptideprophet
$VALprog $PIDoutput $VALparam |& tee -a $datelog

VALoutput=$PIDoutput

if [ -f $VALoutput ]; then
    if [ ! -s $VALoutput ]; then
        echo -e "\e[91mERROR:\e[0m $VALoutput is empty"
        exit
    fi
else
    echo -e "\e[91mERROR:\e[0m $VALoutput is not a file"
    exit
fi
##End## "PeptideProphet"
