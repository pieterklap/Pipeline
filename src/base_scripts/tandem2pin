##Start## "tandem2pin"

# create an extra parameter file with the decoy fasta
PIDparam_decoy=$PIDparam"_decoy"
sed 's/taxon">human/taxon">human_decoy/' $PIDparam > $PIDparam_decoy

for input in $PIDinput
do
#   input.xml
#   creates varable to be able t be used in sed
    inputXT=${input//\//\\/}        # sets backslashes in front of forward slashes for use with sed
    outputXT=${Stand_output//\//\\/}      # sets backslashes in front of forward slashes for use with sed

#   Changes the paths in the input.xml file
#   Sets the input path
    sed -i "s/\"spectrum, path\">.*</\"spectrum, path\">$inputXT</" "$PIDparam_decoy"
#   changes the extention of the input file and adds the output suffix to create the output file name
    NAME_input=$(echo ${input} | awk -F\/ '{print $NF}' | awk -F\. '{$NF="";print $0}' | tr " " "." | head -c-2)
    NAME_input="decoy_$NAME_input$output_suffix.t.xml"
#   Sets the output path/name
    sed -i "s/\"output, path\">.*</\"output, path\">$outputXT\/$NAME_input</" "$PIDparam_decoy"

#   run Xtandem
    $PIDprog $PIDparam_decoy |& tee -a $datelog

    PIDoutput_decoy+="$Stand_output/$NAME_input "

done

# t.xml to tab delimited file with tandem2pin

CONVprog=$(grep "tandem2pin " "$LOC"install_locations | awk '{print $2}')
if [[ $CONVprog == "" ]] || [ ! -f $CONVprog ]; then
    echo -e "\e[93mWARNING:\e[0m The location of tandem2pin is not given or does not exist"
    CONVprog=$(command -v tandem2pin)
    if [[ $CONVprog == "" ]]; then
        echo -e "\e[91mERROR:\e[0m tandem2pin was not found. \nexiting"
        exit
    else
        echo -e "\e[92mRunning:\e[0m $CONVprog"
    fi
fi

EXTENTION=$(echo $PIDoutput |awk -F\. '{print $NF}')
for Pep_file in $PIDoutput
do
    VALinput=$(echo ${Pep_file} | sed "s/$EXTENTION/pin/")
    Decoy_run=$(echo $PIDoutput_decoy | awk '{print $1}')

    $CONVprog -o $VALinput ${Pep_file} $Decoy_run |& tee -a $datelog

    PIDoutput_decoy=$(echo $PIDoutput_decoy | awk '{$1="";print $0}')

    CONVoutput+="$VALinput "
done

PIDoutput=$CONVoutput

for output in $PIDoutput
do
# if the file is not found and/or empty it is removed from the $PIDoutput it exits if $PIDoutput is empty
    if [ -f ${output} ]; then
        if [ ! -s ${output} ]; then
            echo -e "\e[91mERROR:\e[0m ${output} is empty \nsomething went wrong running $CONVprog" | tee -a $datelog
            PIDoutput=${PIDoutput//${output}/}
        fi
    else
        echo -e "\e[91mERROR:\e[0m ${output} is not a file \nsomething went wrong running $CONVprog" | tee -a $datelog
        PIDoutput=${PIDoutput//${output}/}
    fi
done
if [[ $PIDoutput == "" ]]; then
    echo -e "\e[91mERROR:\e[0m no output files found"
    exit
fi

##End## "tandem2pin"
