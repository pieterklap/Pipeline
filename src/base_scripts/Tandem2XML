##Start## "Tandem2XML"

# Location of Tandem2XMl
CONVprog=$(grep Tandem2XML "$LOC"install_locations | awk '{print $2}')
if [[ $CONVprog == "" ]] || [ ! -f $CONVprog ]; then
    echo -e "\e[93mWARNING:\e[0m The location of Tandem2XML is not given or does not exist"
    CONVprog=$(command -v Tandem2XML)
    if [[ $CONVprog == "" ]]; then
        echo -e "\e[91mERROR:\e[0m Tandem2XML was not found. \nexiting"
        exit
    else
        echo -e "\e[92mRunning:\e[0m $CONVprog"
    fi
fi

for Pep_file in $PIDoutput
do
#   Sets the name of the output file to {file}.pep.xml
    VALinput=${Pep_file//.xml/.pep.xml}

#   runs Tandem2XML
    $CONVprog $Pep_file $VALinput |& tee -a $datelog

    CONVoutput+="$VALinput "
done
# sets PIDoutput to be used in peptideprophet
PIDoutput="$CONVoutput"

for output in $PIDoutput
do
# if the file is not found and/or empty it is removed from the $PIDoutput it exits if $PIDoutput is empty
    if [ -f ${output} ]; then
        if [ ! -s ${output} ]; then
            echo -e "\e[91mERROR:\e[0m ${output} is empty \nsomething went wrong running $CONVprog" | tee -a $datelog
            PIDoutput=${PIDoutput//${output}/}
        fi
    else
        echo -e "\e[91mERROR:\e[0m ${output} is not a file \nsomething went wrong running $CONVprog" | tee -a $datelog
        PIDoutput=${PIDoutput//${output}/}
    fi
done
if [[ $PIDoutput == "" ]]; then
    echo -e "\e[91mERROR:\e[0m no output files found"
    exit
fi

##End## "Tandem2XML"
