##Start## "Reactome"

if [[ $ANAparameters != "" ]]; then
    RTparam=$(echo $ANAparameters | awk '{print $1}')
    ANAparameters=$(echo $ANAparameters | awk '{$1="";print $0}')
fi

#   Base URL for Reactome
baseURL="https://reactome.org/AnalysisService"
if [[ $RTparam == "" ]]; then
    #   parameter for annalysis with Reactome
    reactome_parameter_identifiers="interactors=false&species=Homo%20sapiens&sortBy=ENTITIES_PVALUE&resource=TOTAL&pValue=1&includeDisease=true"
    # parameters for downloading the pdf
    reactome_parameter_report="number=25&diagramProfile=Modern&analysisProfile=Standard&fireworksProfile=Barium%20Lithium"
    species="species=Homo%20sapiens"
else
    reactome_parameter_identifiers=$(sed 's/#.*//g' $RTparam | grep '\[identifiers\]' | sed 's/ \[identifiers\]//g' | sed 's/ /%20/g')
    reactome_parameter_report=$(sed 's/#.*//g' $RTparam | grep '\[report\]' | sed 's/ \[report\]//g' | sed 's/ /%20/g')

    reactome_parameter_identifiers=$(echo $reactome_parameter_identifiers | sed 's/ /\&/g')
    reactome_parameter_report=$(echo $reactome_parameter_report | sed 's/ /\&/g')

    species=$(grep "species=" $RTparam | sed 's/\[.*\]//g')
    species=$(echo $species | sed 's/ /%20/g')
fi

for Pep_file in $VALoutput
do
    PROTEIN=""
    EXTENTION=$(echo ${Pep_file} | awk -F\. '{print $(NF-1)"."$NF}')
    NAMEfile=${Pep_file//.$EXTENTION/_gprofiler_${EXTENTION//./_}}
    i=0
    if [[ $EXTENTION == pep.xml ]]; then
        # takes the protein names out of the pep.xml file (peptideprophet)
        Protein_info=$(grep "^<search_hit hit_rank=\"1\" peptide=" "${Pep_file}" | awk -F\| '{print $2}')
        peptide_prophet_score=$(grep "^<peptideprophet_result" "${Pep_file}" | awk '{print $2}' | awk -F= '{print $2}' | sed 's/\"//g')
        NUM_Peptides=$(echo $Protein_info | wc -w)

        if (($(echo $Protein_info | wc -w)!=$(echo $peptide_prophet_score | wc -w))); then
            sed -n '/^<search_result>/,/^<peptideprophet_result probability/p' "${Pep_file}" > "$LOC".TEMP.pep.xml
            pepxml_file="$LOC"".TEMP.pep.xml"
            Protein_info=$(grep "^<search_hit hit_rank=\"1\" peptide=" "${Pep_file}" | awk -F\| '{print $2}')
            peptide_prophet_score=$(grep "^<peptideprophet_result" "${Pep_file}" | awk '{print $2}' | awk -F= '{print $2}' | sed 's/\"//g')
            NUM_Peptides=$(echo $Protein_info | wc -w)
        fi
        for protein in $Protein_info
        do
            Score=${peptide_prophet_score:0:6}
            if [[ ${Score:0:1} == 1 ]] ; then
                PROTEIN+=$(echo -ne "\"${protein}\",")
            elif [[ ${Score:2:1} == 0 ]]; then
                echo -ne ""
            elif ((${Score:2:4}>=9900)); then
                PROTEIN+=$(echo -ne "\"${protein}\",")
            fi
            peptide_prophet_score=${peptide_prophet_score:7}
            if (( ((i % 100)) == 0 )); then
                echo -ne "\r$i/$NUM_Peptides"
            fi
            i=$[$i+1]
        done
        echo -ne "\r$i/$NUM_Peptides"
        echo -e "\nfound $(echo $PROTEIN | sed 's/,/ /g' | wc -w) proteins"

        if [ -f .TEMP.pep.xml ]; then
            rm .TEMP.pep.xml
        fi
#        awk -F\" '{print $2}' $output | sort -u  > "$output"

    elif [[ $EXTENTION == put.xml ]]; then
        #   takes the protein names out of the put.xml file (percolator)
        #   takes all proteins with a q_vlaue less than 1*10^2 since put.xml orders based on q-value
        Protein_info=$(sed -n '/^  <psms>/,/e-02<\/q_value>/p' "${Pep_file}" | grep "<protein_id>" | awk -F\| '{print $2}' | sort -u)

        for protein in $Protein_info
        do
            PROTEIN+="${protein} "
        done
        echo -e "\nfound $(echo $PROTEIN | sed 's/,/ /g' | wc -w) proteins"
    fi

#   saves the protein list
    echo $PROTEIN > $NAMEfile.prot
    Datainput="\"$PROTEIN\""
    echo "Running Reactome for ${Pep_file}"
#   Runs the identifiers tool
    curl -X POST \
    "$baseURL/identifiers/?$reactome_parameter_identifiers" \
    -H  "accept: application/json" \
    -H  "content-type: text/plain" \
    -d "$Datainput" \
    --output $NAMEfile.json |& tee -a $datelog
#   takes the token from the .json file and replaces any % with %25 so that it can be used in a url
    Token=$(cat $NAMEfile.json | awk -F\" '{print $6}')
    Token=${Token//%/%25}
    echo "Retreving Reactome report for ${Pep_file}"
    curl -X GET \
    "$baseURL/report/$Token/${species//species=/}/report.pdf?$reactome_parameter_report" \
    -H  "accept: application/pdf" \
    --output $NAMEfile.pdf |& tee -a $datelog

done


##End## "Reactome"
