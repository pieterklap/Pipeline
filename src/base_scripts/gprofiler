##Start## "gprofiler"
if [[ $ANAparameters != "" ]]; then
    GPparams=$(echo $ANAparameters | awk '{print $1}')
    ANAparameters=$(echo $ANAparameters | awk '{$1="";print $0}')
fi

if [[ $GPparams == "" ]]; then
    GPparams="X"
fi

GPparams=$(grep -v "^#" $GPparams |grep -v "^ " | awk '{print $1":",$2","}' | grep -v "^:")

if [[ $GPparams == "" ]]; then
#   if no parameters were given it sets it to the default values
    GPparams="\"organism\": \"hsapiens\","
fi

for Pep_file in $VALoutput
do
    PROTEIN=""
    EXTENTION=$(echo ${Pep_file} | awk -F\. '{print $(NF-1)"."$NF}')
    NAMEfile=${Pep_file//.$EXTENTION/_gprofiler_${EXTENTION//./_}}
    i=0
    if [[ $EXTENTION == pep.xml ]]; then
        # takes the protein names out of the pep.xml file (peptideprophet)
#        PROTEIN=$(cat ${Pep_file} | grep "<search_hit hit_rank=\"1\"" | awk -F\| '{print "\"" $2 "\"""\,"}')

        Protein_info=$(grep "^<search_hit hit_rank=\"1\" peptide=" "${Pep_file}" | awk -F\| '{print $2}')

        peptide_prophet_score=$(grep "^<peptideprophet_result" "${Pep_file}" | awk '{print $2}' | awk -F= '{print $2}' | sed 's/\"//g')
        NUM_Peptides=$(echo $Protein_info | wc -w)

        if (($(echo $Protein_info | wc -w)!=$(echo $peptide_prophet_score | wc -w))); then
            sed -n '/^<search_result>/,/^<peptideprophet_result probability/p' "${Pep_file}" > "$LOC".TEMP.pep.xml
            pepxml_file="$LOC"".TEMP.pep.xml"
            Protein_info=$(grep "^<search_hit hit_rank=\"1\" peptide=" "${Pep_file}" | awk -F\| '{print $2}')
            peptide_prophet_score=$(grep "^<peptideprophet_result" "${Pep_file}" | awk '{print $2}' | awk -F= '{print $2}' | sed 's/\"//g')
            NUM_Peptides=$(echo $Protein_info | wc -w)
        fi
        for protein in $Protein_info
        do
            Score=${peptide_prophet_score:0:6}

            if [[ ${Score:0:1} == 1 ]] ; then
                PROTEIN+=$(echo -ne "\"${protein}\",")
            elif [[ ${Score:2:1} == 0 ]]; then
                echo -ne ""
            elif ((${Score:2:4}>=9900)); then
                PROTEIN+=$(echo -ne "\"${protein}\",")
            fi
            peptide_prophet_score=${peptide_prophet_score:7}

            if (( ((i % 100)) == 0 )); then
                echo -ne "\r$i/$NUM_Peptides"
            fi
            i=$[$i+1]
        done

        echo -ne "\r$i/$NUM_Peptides"
        echo -e "\nfound $(echo $PROTEIN | sed 's/,/ /g' | wc -w) proteins"

        if [ -f .TEMP.pep.xml ]; then
            rm .TEMP.pep.xml
        fi
#        awk -F\" '{print $2}' $output | sort -u  > "$output"

    elif [[ $EXTENTION == put.xml ]]; then
        #   takes the protein names out of the put.xml file (percolator)
        #   takes all proteins with a q_vlaue less than 1*10^2 since put.xml orders based on q-value
        Protein_info=$(sed -n '/^  <psms>/,/e-02<\/q_value>/p' "${Pep_file}" | grep "<protein_id>" | awk -F\| '{print $2}' | sort -u)

        for protein in $Protein_info
        do
            PROTEIN+=$(echo -ne "\"${protein}\",")
        done
        echo -e "\nfound $(echo $PROTEIN | sed 's/,/ /g' | wc -w) proteins"
    fi

#   removes the last "," from $PROTEIN
    PROTEIN=$(echo $PROTEIN | tr " " "\n" | sort -u | tr "\n" " " | head -c-2) 
#   saves the protein list
    echo $PROTEIN > $NAMEfile.prot

    GPparams_complete=$(echo "{$GPparams \"query\": [$PROTEIN]}")
    echo "Running gprofiler for ${Pep_file}"
#   calls the gost API
    curl  \
    -o "$NAMEfile.json" \
    -X 'POST' \
    -H 'Content-Type: application/json' \
    -d  "$GPparams_complete" 'https://biit.cs.ut.ee/gprofiler_beta/api/gost/profile/' |& tee -a $datelog

done

##End## "gprofiler"
